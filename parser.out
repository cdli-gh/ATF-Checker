Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> description
Rule 1     description -> PNUMBER EQUALS string newline
Rule 2     string -> NORMALSTRING
Rule 3     string -> string NORMALSTRING
Rule 4     newline -> NEWLINE

Terminals, with rules where they appear

EQUALS               : 1
NEWLINE              : 4
NORMALSTRING         : 2 3
PNUMBER              : 1
error                : 

Nonterminals, with rules where they appear

description          : 0
newline              : 1
string               : 1 3

Parsing method: LALR

state 0

    (0) S' -> . description
    (1) description -> . PNUMBER EQUALS string newline

    PNUMBER         shift and go to state 1

    description                    shift and go to state 2

state 1

    (1) description -> PNUMBER . EQUALS string newline

    EQUALS          shift and go to state 3


state 2

    (0) S' -> description .



state 3

    (1) description -> PNUMBER EQUALS . string newline
    (2) string -> . NORMALSTRING
    (3) string -> . string NORMALSTRING

    NORMALSTRING    shift and go to state 4

    string                         shift and go to state 5

state 4

    (2) string -> NORMALSTRING .

    NORMALSTRING    reduce using rule 2 (string -> NORMALSTRING .)
    NEWLINE         reduce using rule 2 (string -> NORMALSTRING .)


state 5

    (1) description -> PNUMBER EQUALS string . newline
    (3) string -> string . NORMALSTRING
    (4) newline -> . NEWLINE

    NORMALSTRING    shift and go to state 8
    NEWLINE         shift and go to state 7

    newline                        shift and go to state 6

state 6

    (1) description -> PNUMBER EQUALS string newline .

    $end            reduce using rule 1 (description -> PNUMBER EQUALS string newline .)


state 7

    (4) newline -> NEWLINE .

    $end            reduce using rule 4 (newline -> NEWLINE .)


state 8

    (3) string -> string NORMALSTRING .

    NORMALSTRING    reduce using rule 3 (string -> string NORMALSTRING .)
    NEWLINE         reduce using rule 3 (string -> string NORMALSTRING .)

